import React from 'react';
import { SafeAreaView,StyleSheet,Dimensions, StatusBar ,FlatList,
    View,Image, Text,TouchableOpacity}  from 'react-native';



const { width, height} = Dimensions.get("window");

const COLORS = {primary: '#ffd200', black: '#000'};



const Slides = [

    {

        id: '1',
        imageLogo: require('../assets/Taskam_Logo.png'),
        title:  "Get your menial\njobs done with the\ntap of a button.",
        circle: '1',
        image: require('../assets/Taskam_Onboarding_Image1.png')
       
    },

    {

        id: '2',
       
        imageLogo:require('../assets/Taskam_Logo.png') ,
        title: "Make easy money,\npartime or full time,\ndoing simple tasks\naround your\nneigborhood.",
        circle: '2',
        image: require('../assets/Taskam_Onboarding_Image2.png'),
        backgroundColor: '#fff'
        
    },


    {

        id: '3',
        imageLogo: require('../assets/Taskam_Logo.png'),
        title: "Make exta money.\nGet a friend to sign up\nand get commissions\non his(er) first 20\ntransactions.",
        circle: '3',
        image:require('../assets/Taskam_Onboarding_Image3.png')
    },

    {

        id: '4',
        imageLogo: require('../assets/Taskam_Logo.png'),
   
    }
]

const height_proportion = '18%'



const Slide = ({item}) =>{
    return <View>
        
<Image source={item.imageLogo}
style = {styles.imageLogo}
/>
<Text style= {styles.title}>{item.title}</Text>


  <View style= {styles.circleView}>
    <Text style= {styles.circle}>{item.circle}</Text></View>
<Image source= {item.image} style = {styles.imageIcon}/>
    </View>
}

const OnBoardingScreen = ({navigation}) =>{
    const [currentSlideIndex, setCurrentSlideIndex] = React.useState(0);
    const ref = React.useRef(null);

    const Footer = () => {
        return(
            <View style= {{height: height * 0.20, 
              marginLeft:110,
                paddingHorizontal:20, marginTop:10, }}>
                    
                    <View style={{flexDirection: 'row',marginLeft:-20}} >
                    <TouchableOpacity onPress={goNextSlide}><Text style={styles.next}>Next</Text></TouchableOpacity>
                    <View style={{width:1, height:15, backgroundColor:'black', marginTop:15, marginLeft:10, marginRight:10}}  ></View>
                    <TouchableOpacity onPress={skip} ><Text style={styles.next}>Skip</Text></TouchableOpacity>
                    </View>
                     <View style={{flexDirection: 'row',marginLeft:-20 }}>
                    {Slides.map((_, index) =>(
                    <View key= {index} style={[
                     styles.indicator,
                     currentSlideIndex == index && {
                     backgroundColor: 'black'
                            }
                        ]}>

                        </View>
                    ))}
                      
                      </View>
</View>

                

             )
    

    };
    const updateCurrentSlideIndex = e => {
       const contentoffsetX = e.nativeEvent.contentOffset.x;
       const currentIndex = Math. round(contentoffsetX /width);
       setCurrentSlideIndex(currentIndex);
    };

    const goNextSlide =() => {
    const nextSlideIndex = currentSlideIndex +1;
    if (nextSlideIndex != Slides.length){
        const offset = nextSlideIndex * width;
    ref?.current?.scrollToOffset({offset});
    setCurrentSlideIndex(nextSlideIndex);


    }
    };


    const skip =() =>{
    const lastSlideIndex = Slides.length -1;
    const offset = lastSlideIndex * width;
    ref?.current?.scrollToOffset({offset});
    setCurrentSlideIndex(lastSlideIndex);
    }
    return (<SafeAreaView style= {{flex: 1, backgroundColor: COLORS.primary}}>
        <StatusBar backgroundColor = {COLORS.primary}/>
        <FlatList
        ref= {ref}
        onMomentumScrollEnd =  {updateCurrentSlideIndex}
        pagingEnabled
         data= {Slides} contentContainerStyle={{height: height * 0.75}} 
        horizontal
        showsVerticalScrollIndicator={false}
        renderItem = {({item}) => <Slide item ={item}/>}
        />
        <Footer/>
        
    </SafeAreaView>
    )
};











const styles = StyleSheet.create({

    imageLogo:{
height: height_proportion,
width:400,
resizeMode: 'contain',
marginTop: 30,
marginLeft:-17
    },
    title:{
        color: COLORS.black,
        fontSize: 22,
        fontWeight: "100",
        marginTop: 10,
       marginLeft: 106,
       textAlign:'left',
       fontFamily: 'ubuntu',
       lineHeight: 26

       
        
    },
    circle:{
        color: COLORS.black,
        fontSize: 20,
        fontWeight: "100",
       marginTop:-3,
       borderColor: COLORS.black
       },
circleView:{
    marginTop: 20,
    marginLeft: 106,
    backgroundColor:COLORS.primary,
    width:  25,
    height:  25,
   borderWidth: 1,
  justifyContent:'center',
  alignItems:'center',
   padding:'auto',
   borderRadius: 12.5


},
imageIcon:{
    height: 200,
    width: 250,
    resizeMode: 'contain',
    marginTop: 40,
    marginLeft: 90
        },


        indicator:{
         marginTop:30,
   marginRight:5,
    backgroundColor:COLORS.primary,
    width:  12,
    height:  12,
   borderWidth: 1,
   borderRadius:6,
   marginHorizontal:3,
        },
        next:{
            color: COLORS.black,
        fontSize: 18,
        fontWeight: "100",
        marginTop: 10,
     
        }

});




export default OnBoardingScreen;